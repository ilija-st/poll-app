// Code generated by ent, DO NOT EDIT.

package ent

import (
	"backend/ent/poll"
	"backend/ent/polloption"
	"backend/ent/schema"
	"backend/ent/user"
	"backend/ent/vote"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	pollFields := schema.Poll{}.Fields()
	_ = pollFields
	// pollDescQuestion is the schema descriptor for question field.
	pollDescQuestion := pollFields[0].Descriptor()
	// poll.QuestionValidator is a validator for the "question" field. It is called by the builders before save.
	poll.QuestionValidator = func() func(string) error {
		validators := pollDescQuestion.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(question string) error {
			for _, fn := range fns {
				if err := fn(question); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// pollDescStatus is the schema descriptor for status field.
	pollDescStatus := pollFields[1].Descriptor()
	// poll.DefaultStatus holds the default value on creation for the status field.
	poll.DefaultStatus = pollDescStatus.Default.(string)
	// poll.StatusValidator is a validator for the "status" field. It is called by the builders before save.
	poll.StatusValidator = pollDescStatus.Validators[0].(func(string) error)
	// pollDescCreatedAt is the schema descriptor for created_at field.
	pollDescCreatedAt := pollFields[2].Descriptor()
	// poll.DefaultCreatedAt holds the default value on creation for the created_at field.
	poll.DefaultCreatedAt = pollDescCreatedAt.Default.(func() time.Time)
	// pollDescUpdatedAt is the schema descriptor for updated_at field.
	pollDescUpdatedAt := pollFields[3].Descriptor()
	// poll.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	poll.DefaultUpdatedAt = pollDescUpdatedAt.Default.(func() time.Time)
	// poll.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	poll.UpdateDefaultUpdatedAt = pollDescUpdatedAt.UpdateDefault.(func() time.Time)
	polloptionFields := schema.PollOption{}.Fields()
	_ = polloptionFields
	// polloptionDescTitle is the schema descriptor for title field.
	polloptionDescTitle := polloptionFields[0].Descriptor()
	// polloption.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	polloption.TitleValidator = func() func(string) error {
		validators := polloptionDescTitle.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(title string) error {
			for _, fn := range fns {
				if err := fn(title); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// polloptionDescCreatedAt is the schema descriptor for created_at field.
	polloptionDescCreatedAt := polloptionFields[1].Descriptor()
	// polloption.DefaultCreatedAt holds the default value on creation for the created_at field.
	polloption.DefaultCreatedAt = polloptionDescCreatedAt.Default.(func() time.Time)
	// polloptionDescUpdatedAt is the schema descriptor for updated_at field.
	polloptionDescUpdatedAt := polloptionFields[2].Descriptor()
	// polloption.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	polloption.DefaultUpdatedAt = polloptionDescUpdatedAt.Default.(func() time.Time)
	// polloption.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	polloption.UpdateDefaultUpdatedAt = polloptionDescUpdatedAt.UpdateDefault.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[0].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescFirstName is the schema descriptor for first_name field.
	userDescFirstName := userFields[1].Descriptor()
	// user.FirstNameValidator is a validator for the "first_name" field. It is called by the builders before save.
	user.FirstNameValidator = userDescFirstName.Validators[0].(func(string) error)
	// userDescLastName is the schema descriptor for last_name field.
	userDescLastName := userFields[2].Descriptor()
	// user.LastNameValidator is a validator for the "last_name" field. It is called by the builders before save.
	user.LastNameValidator = userDescLastName.Validators[0].(func(string) error)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[3].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[4].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[5].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	voteFields := schema.Vote{}.Fields()
	_ = voteFields
	// voteDescCreatedAt is the schema descriptor for created_at field.
	voteDescCreatedAt := voteFields[0].Descriptor()
	// vote.DefaultCreatedAt holds the default value on creation for the created_at field.
	vote.DefaultCreatedAt = voteDescCreatedAt.Default.(func() time.Time)
	// voteDescUpdatedAt is the schema descriptor for updated_at field.
	voteDescUpdatedAt := voteFields[1].Descriptor()
	// vote.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	vote.DefaultUpdatedAt = voteDescUpdatedAt.Default.(func() time.Time)
	// vote.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	vote.UpdateDefaultUpdatedAt = voteDescUpdatedAt.UpdateDefault.(func() time.Time)
}
